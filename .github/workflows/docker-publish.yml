name: Build, Test, and Push

on:
  workflow_dispatch:
  push:
    tags: ["v*"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.2'

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          
      - name: Install Go protobuf plugins
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      
      - name: Generate protobuf files
        working-directory: ./app
        run: |
          mkdir -p gen
          protoc --proto_path=proto \
                 --go_out=gen --go_opt=paths=source_relative \
                 --go-grpc_out=gen --go-grpc_opt=paths=source_relative \
                 proto/auth.proto
          
      - name: Verify generated files
        if: github.event_name == 'pull_request'
        run: |
          git diff --exit-code app/gen/ || \
          (echo "Error: Generated files are out of date. Run:" && \
           echo "  protoc --proto_path=app/proto --go_out=app/gen --go_opt=paths=source_relative --go-grpc_out=app/gen --go-grpc_opt=paths=source_relative app/proto/auth.proto" && \
           echo "and commit the changes." && exit 1)

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ./app/go.sum
          key: ${{ runner.os }}-go-${{ github.workflow }}-${{ hashFiles('app/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ github.workflow }}-
            ${{ runner.os }}-go-

      - name: Run unit tests
        working-directory: ./app
        run: go test -v -mod=readonly ./...

  sonarcloud:
    needs: test  # Go on only if job "test" successfully
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: >
            -Dsonar.exclusions=**/*_test.go
            -Dsonar.projectKey=taekwondodev_go-gRPC-Authentication
            -Dsonar.organization=taekwondodev
            -Dsonar.coverage.exclusions=**/*
            -Dsonar.analysis.ignoreCoverage=true

  deploy:
    needs: sonarcloud  # Go on only if job "sonarcloud" successfully
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          buildkitd-flags: --debug

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./app/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            TARGETOS=linux
            TARGETARCH=${{ matrix.arch }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/go-grpc-auth:latest
            ghcr.io/${{ github.repository_owner }}/go-grpc-auth:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
